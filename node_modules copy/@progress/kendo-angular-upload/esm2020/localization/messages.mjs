/**-----------------------------------------------------------------------------------------
* Copyright © 2023 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, Input } from '@angular/core';
import { ComponentMessages } from '@progress/kendo-angular-l10n';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export class Messages extends ComponentMessages {
}
Messages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: Messages, deps: null, target: i0.ɵɵFactoryTarget.Directive });
Messages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.12", type: Messages, inputs: { cancel: "cancel", clearSelectedFiles: "clearSelectedFiles", dropFilesHere: "dropFilesHere", externalDropFilesHere: "externalDropFilesHere", filesBatchStatus: "filesBatchStatus", filesBatchStatusFailed: "filesBatchStatusFailed", filesBatchStatusUploaded: "filesBatchStatusUploaded", fileStatusFailed: "fileStatusFailed", fileStatusUploaded: "fileStatusUploaded", headerStatusPaused: "headerStatusPaused", headerStatusUploaded: "headerStatusUploaded", headerStatusUploading: "headerStatusUploading", invalidFileExtension: "invalidFileExtension", invalidMaxFileSize: "invalidMaxFileSize", invalidMinFileSize: "invalidMinFileSize", pause: "pause", remove: "remove", resume: "resume", retry: "retry", select: "select", uploadSelectedFiles: "uploadSelectedFiles" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: Messages, decorators: [{
            type: Directive
        }], propDecorators: { cancel: [{
                type: Input
            }], clearSelectedFiles: [{
                type: Input
            }], dropFilesHere: [{
                type: Input
            }], externalDropFilesHere: [{
                type: Input
            }], filesBatchStatus: [{
                type: Input
            }], filesBatchStatusFailed: [{
                type: Input
            }], filesBatchStatusUploaded: [{
                type: Input
            }], fileStatusFailed: [{
                type: Input
            }], fileStatusUploaded: [{
                type: Input
            }], headerStatusPaused: [{
                type: Input
            }], headerStatusUploaded: [{
                type: Input
            }], headerStatusUploading: [{
                type: Input
            }], invalidFileExtension: [{
                type: Input
            }], invalidMaxFileSize: [{
                type: Input
            }], invalidMinFileSize: [{
                type: Input
            }], pause: [{
                type: Input
            }], remove: [{
                type: Input
            }], resume: [{
                type: Input
            }], retry: [{
                type: Input
            }], select: [{
                type: Input
            }], uploadSelectedFiles: [{
                type: Input
            }] } });
